{"version":3,"sources":["Components/UI/Card.js","Components/Movies/MoviesFilter.js","Components/Movies/MoviesHeader.js","Components/Movies/MovieItem.js","Components/Movies/MoviesList.js","Components/Movies/Movies.js","camcorder.JPG","logo.JPG","Components/Movies/DescriptionSearch.js","Components/Movies/ModalDetails.js","App.js","index.js"],"names":["Card","props","classes","className","children","MoviesFilter","placeholder","style","width","marginLeft","onPressEnter","event","onChangeFilter","target","value","size","MoviesHeader","isHome","selected","filteredYear","selectedYear","MovieItem","alt","title","src","img","year","type","onClick","fetch","imdbID","then","resp","json","response","onShowModal","MoviesList","results","length","showModal","id","map","movie","Title","Year","Poster","Movies","useState","setFilteredYear","query","data","numResults","total","showSizeChanger","onChange","page","newPageSize","nextPageResults","nextPageRequests","nextPageURLS","pageInt","pageToGet","parseInt","URL","push","forEach","nextURL","url","Promise","resolve","reject","all","nextPagePromiseResults","nextPagePromiseResult","Search","result","onPageChange","window","scroll","pageSizeOptions","hideOnSinglePage","Input","DescriptionSearch","setQuery","setIsHome","useEffect","onUpdateQuery","onSearch","logo","location","reload","fontSize","enterButton","ModalDetails","details","Runtime","Genre","Director","Actors","Rated","Metascore","imdbRating","Plot","Header","Layout","Content","App","status","setStatus","setResults","setNumResults","setShowModal","modalResults","setModalResults","camcorder","queryResults","Response","totalResults","newQuery","newPage","pageChangeResults","filteredResults","visible","onCancel","cancelButtonProps","display","onOk","okButtonProps","okText","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7cc5e956.chunk.js","sourcesContent":["import './Card.css';\r\n\r\nconst Card = (props) => {\r\n  const classes = 'card ' + props.className;\r\n\r\n  return <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;","import { Input } from 'antd';\r\nimport './MoviesFilter.css';\r\n\r\nconst MoviesFilter = props => {\r\n\r\n  // Handler for change to filter (pass back up to filter results stored in above component)\r\n  const filterChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className='movies-filter'>\r\n      <div className='movies-filter__control'>\r\n        <label>Filter by year</label>\r\n        <Input placeholder=\"Enter a year\" style={{width : 100, marginLeft: -200}} onPressEnter={filterChangeHandler} size=\"small\"/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoviesFilter;","import MoviesFilter from './MoviesFilter';\r\nimport './MoviesHeader.css';\r\n\r\nconst MoviesHeader = props => {\r\n  \r\n  // Handler for change to filter - pass filtered year back up to above components for refetching with year\r\n  const filterChangeHandler = selectedYear => {\r\n    props.onChangeFilter(selectedYear);\r\n  }\r\n\r\n  // Controls header of body based on whether or not something has been searched\r\n  if (props.isHome === true){\r\n    return(\r\n      <h2 className='movies-header__title'> Top Movies </h2>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2 className='movies-header__title'> Results </h2>\r\n      <MoviesFilter\r\n        selected={props.filteredYear}\r\n        onChangeFilter={filterChangeHandler}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MoviesHeader;","import { Button } from \"antd\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./MovieItem.css\";\r\n\r\nconst MovieItem = (props) => {\r\n  // Click handler for modal pop up\r\n  const clickHandler = () => {\r\n    \r\n    // Fetch from API using the movie's ID to fetch more details\r\n    fetch(\r\n      `https://www.omdbapi.com/?i=${props.imdbID}&y=&plot=full&tomatoes=true&r=json&apikey=cb8625d1`\r\n    )\r\n      .then((resp) => resp)\r\n      .then((resp) => resp.json())\r\n      .then((response) => {\r\n        props.onShowModal(response);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <li>\r\n      <Card className=\"movie-item\">\r\n        <div className=\"movie-item__description\">\r\n          <img\r\n            className=\"movie-item__poster\"\r\n            alt={props.title}\r\n            src={\r\n              props.img === \"N/A\"\r\n                ? \"https://www.westernheights.k12.ok.us/wp-content/uploads/2020/01/No-Photo-Available.jpg\"\r\n                : props.img\r\n            }\r\n          />\r\n          <h2>\r\n            {props.title} ({props.year})\r\n          </h2>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={clickHandler}\r\n            className=\"movie-item__price\"\r\n          >\r\n            Details\r\n          </Button>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default MovieItem;\r\n","import MovieItem from './MovieItem';\r\nimport './MoviesList.css';\r\n\r\nconst MoviesList = (props) => {\r\n  \r\n  // Handle failed fetch requests\r\n  if (props.response === \"False\" || props.results===null || props.results.length === 0) {\r\n    return <h2 className='movies-list__fallback'>Found no movies.</h2>;\r\n  }\r\n\r\n  // Pass id back up to above components to render modal\r\n  const showModal = (id) => {\r\n    props.onShowModal(id);\r\n  }\r\n\r\n  return (\r\n    <ul className='movies-list'>\r\n      <div className='movies-list__grid'>\r\n       {props.results.map((movie) => (\r\n          <MovieItem\r\n            onShowModal={showModal}\r\n            key={movie.imdbID}\r\n            imdbID={movie.imdbID}\r\n            title={movie.Title}\r\n            year={movie.Year}\r\n            img={movie.Poster}\r\n          />\r\n        ))}\r\n      </div>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default MoviesList;","import { useState } from \"react\";\r\nimport { Pagination } from \"antd\";\r\nimport Card from \"../UI/Card\";\r\nimport MoviesHeader from \"./MoviesHeader\";\r\nimport MoviesList from \"./MoviesList\";\r\nimport \"./Movies.css\";\r\n\r\nconst Movies = (props) => {\r\n\r\n  // state variable to hold year being filtered for search\r\n  const [filteredYear, setFilteredYear] = useState(\"\");\r\n\r\n  // Handler for user filtering\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n\r\n    // Fetch API results which fit criteria year\r\n    fetch(\r\n      `https://www.omdbapi.com/?s=${props.query}&type=movie&y=${selectedYear}&apikey=cb8625d1`\r\n    )\r\n      .then((response) => response)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        props.onChangeFilter(data);\r\n      });\r\n  };\r\n\r\n  // Helper function for pagination which returns a promise for fetching API results\r\n  const getNextPage = (url) => {\r\n    return new Promise((resolve, reject) => {\r\n      fetch(url)\r\n        .then((response) => response)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          resolve(data);\r\n        });\r\n    });\r\n  };\r\n\r\n  // Handler for any type of change to pagination feature\r\n  const pageChangeHandler = (page, newPageSize) => {\r\n    // Handles edge case on home page\r\n    if (page === 0) {\r\n      page = 1;\r\n    }\r\n\r\n    // Calculates what page to start it in the backend (adjusted for pageSize)\r\n    page = page * (newPageSize / 10) - (newPageSize - 10) / 10;\r\n\r\n    // Arrays to hold results, fetch promises and fetch URLS\r\n    let nextPageResults = [];\r\n    let nextPageRequests = [];\r\n    let nextPageURLS = [];\r\n\r\n    // Loop to create all URLs which will be fetched from (backend pagination- one URL per 10 result page from OMDB)\r\n    for (let pageInt = 0; pageInt < newPageSize / 10; pageInt++) {\r\n      let pageToGet = page + pageInt;\r\n\r\n      // Push URL to URL holding array\r\n      if (pageToGet * 10 < parseInt(props.numResults) + 10) {\r\n        let URL = `https://www.omdbapi.com/?s=${props.query}&page=${pageToGet}&type=movie&y=${filteredYear}&apikey=cb8625d1`;\r\n        nextPageURLS.push(URL);\r\n      }\r\n    }\r\n\r\n    // Call helper function to create fetch promise and push promise to promise holding array\r\n    nextPageURLS.forEach((nextURL) =>\r\n      nextPageRequests.push(getNextPage(nextURL))\r\n    );\r\n\r\n    // Wait for all promises to execute and then append results to results holding array\r\n    Promise.all(nextPageRequests).then((nextPagePromiseResults) => {\r\n      nextPagePromiseResults.forEach((nextPagePromiseResult) =>\r\n        nextPagePromiseResult.Search.forEach((result) =>\r\n          nextPageResults.push(result)\r\n        )\r\n      );\r\n      // Pass results back up to update state and send back down for rendering purposes\r\n      props.onPageChange(page, nextPageResults);\r\n      window.scroll(0, 500);\r\n    });\r\n  };\r\n\r\n  // Pass id back up for modal rendering\r\n  const showModal = (id) => {\r\n    props.onShowModal(id);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"movies\">\r\n        <MoviesHeader\r\n          isHome={props.isHome}\r\n          filteredYear={filteredYear}\r\n          onChangeFilter={filterChangeHandler}\r\n        />\r\n        <MoviesList\r\n          response={props.response}\r\n          onShowModal={showModal}\r\n          results={props.results}\r\n        />\r\n        <div className=\"pages\">\r\n          <p className=\"page-total\"> {`Total ${props.numResults} items`}</p>\r\n          <Pagination\r\n            total={props.numResults}\r\n            showSizeChanger\r\n            /*showTotal={total => `Total ${total} items`}*/\r\n            onChange={pageChangeHandler}\r\n            pageSizeOptions={[10, 20]}\r\n            hideOnSinglePage={true}\r\n          />\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n","export default __webpack_public_path__ + \"static/media/camcorder.4c4e1d70.JPG\";","export default __webpack_public_path__ + \"static/media/logo.0a43489a.JPG\";","import { useState, useEffect } from \"react\";\r\nimport { Input } from \"antd\";\r\nimport logo from \"../../logo.JPG\";\r\nimport \"./DescriptionSearch.css\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst DescriptionSearch = (props) => {\r\n  // state variables to hold query settings (home page is defaulted to an Avengers query)\r\n  const [query, setQuery] = useState(\"Avengers\");\r\n  const [isHome, setIsHome] = useState(true);\r\n\r\n  // refresh function\r\n  const refreshPage = () => {\r\n    window.location.reload();\r\n  }\r\n  \r\n  // Search handler\r\n  const onSearch = (event) => {\r\n    setQuery(event);\r\n    setIsHome(false);\r\n  };\r\n\r\n  // Effect hook that executes and fetches from API everytime this component is re rendered\r\n  useEffect(() => {\r\n    fetch(`https://www.omdbapi.com/?s=${query}&type=movie&apikey=cb8625d1`)\r\n      .then((response) => response)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        props.onUpdateQuery(query);\r\n        props.onSearch(data, isHome);\r\n      });\r\n  }, [query]);\r\n  \r\n  return (\r\n    <div className=\"description-search\">\r\n      <img className=\"logo\" src={logo} alt=\"logo\" onClick={refreshPage}/>\r\n      <h2 className=\"description-search__big\">\r\n        <span className=\"streamlined\"><span style={{ fontSize: \"50px\" }}>S</span>TREAMLINED.{\" \"}</span>\r\n        <span className=\"comprehensive\"><span style={{ fontSize: \"50px\" }}>C</span>OMPREHENSIVE.{\" \"}</span>\r\n        <span className=\"intuitive\"><span style={{ fontSize: \"50px\" }}>I</span>NTUITIVE.{\" \"}</span>\r\n      </h2>\r\n      <p className=\"description-search__small\">\r\n        {\" \"}\r\n        Access a movie's most essential details through this easy to use\r\n        Internet movie database{\" \"}\r\n      </p>\r\n      <div className=\"description-search__searchBar\">\r\n        <Search\r\n          placeholder=\"Search movie by name\"\r\n          enterButton=\"Lights. Cameras. Action!\"\r\n          size=\"large\"\r\n          onSearch={onSearch}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DescriptionSearch;\r\n","import \"./ModalDetails.css\";\r\n\r\nconst ModalDetails = (props) => {\r\n  return (\r\n    <div className=\"modal-details\">\r\n      <img alt={props.details.Title} src={props.details.Poster === \"N/A\"\r\n      ? \"https://www.westernheights.k12.ok.us/wp-content/uploads/2020/01/No-Photo-Available.jpg\"\r\n      : props.details.Poster} />\r\n      <div className=\"modal-details__info\">\r\n        <h2>{props.details.Title} ({props.details.Year})</h2>\r\n        <p className=\"modal-details__runtime\"><i>{props.details.Runtime}</i></p>\r\n        <div className=\"modal-details__specific-info__container\">\r\n          <p className=\"modal-details__specific-info\"><b>Genre: </b>{props.details.Genre}</p>\r\n          <p className=\"modal-details__specific-info\"><b>Director: </b>{props.details.Director}</p>\r\n          <p className=\"modal-details__specific-info\"><b>Notable Actors/Actresses: </b>{props.details.Actors}</p>\r\n          <p className=\"modal-details__specific-info\"><b>Age Rating: </b>{props.details.Rated}</p>\r\n          <p className=\"modal-details__specific-info\"><b>MetaScore: </b>{props.details.Metascore}</p>\r\n          <p className=\"modal-details__specific-info\"><b>IMDB Rating: </b>{props.details.imdbRating}</p>\r\n          <p className=\"modal-details__specific-info\"><b>Plot Summary: </b>{props.details.Plot}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalDetails;\r\n","import { useState } from \"react\";\r\nimport { Layout, Modal } from \"antd\";\r\nimport Movies from \"./Components/Movies/Movies\";\r\nimport \"./App.css\";\r\nimport camcorder from \"./camcorder.JPG\";\r\nimport DescriptionSearch from \"./Components/Movies/DescriptionSearch\";\r\nimport ModalDetails from \"./Components/Movies/ModalDetails\";\r\n\r\nconst { Header, Content } = Layout;\r\n\r\nconst App = () => {\r\n  // State variables for various parts of the website\r\n  const [status, setStatus] = useState(\"False\");\r\n  const [results, setResults] = useState([]);\r\n  const [numResults, setNumResults] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [modalResults, setModalResults] = useState([]);\r\n  const [query, setQuery] = useState(\"batman\");\r\n  const [isHome, setIsHome] = useState(true);\r\n\r\n  // Function to refresh page\r\n  const refreshPage = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  // Passed down function to handle search results and pass down to children for display\r\n  const searchHandler = (queryResults, isHome) => {\r\n    if (queryResults.Response === \"False\") {\r\n      setResults([]);\r\n    } else {\r\n      setResults(queryResults.Search);\r\n    }\r\n    setStatus(queryResults.Response);\r\n    setNumResults(queryResults.totalResults);\r\n    setIsHome(isHome);\r\n  };\r\n\r\n  // Update query to maintain proper queries when going through pages of results\r\n  const updateQuery = (newQuery) => {\r\n    setQuery(newQuery);\r\n  };\r\n\r\n  // Function to retrieve the next page's results and pass back down to children for display purposes\r\n  const pageChangeHandler = (newPage, pageChangeResults) => {\r\n    setResults(pageChangeResults);\r\n  };\r\n\r\n  // Function to hold filtered results\r\n  const filterChangeHandler = (filteredResults) => {\r\n    setResults(filteredResults.Search);\r\n    setNumResults(filteredResults.totalResults);\r\n    setStatus(filteredResults.Response);\r\n  };\r\n\r\n  // Shows modal when user wants deeper info\r\n  const onShowModal = (id) => {\r\n    setShowModal(true);\r\n    setModalResults(id);\r\n  };\r\n\r\n  return (\r\n    <div className=\"full\">\r\n      <Layout className=\"layout\">\r\n        <Header className=\"header\">\r\n          <img\r\n            className=\"logo\"\r\n            src={camcorder}\r\n            alt=\"camera-logo\"\r\n            onClick={refreshPage}\r\n          />\r\n        </Header>\r\n        <div className=\"divider\" />\r\n        <Content>\r\n          <DescriptionSearch\r\n            onSearch={searchHandler}\r\n            onUpdateQuery={updateQuery}\r\n          />\r\n          <Movies\r\n            isHome={isHome}\r\n            response={status}\r\n            query={query}\r\n            onPageChange={pageChangeHandler}\r\n            onChangeFilter={filterChangeHandler}\r\n            onShowModal={onShowModal}\r\n            numResults={numResults}\r\n            results={results}\r\n          />\r\n          <Modal\r\n            title=\"Movie Details\"\r\n            visible={showModal}\r\n            width={800}\r\n            onCancel={() => setShowModal(false)}\r\n            cancelButtonProps={{ style: { display: \"none\" } }}\r\n            onOk={() => setShowModal(false)}\r\n            okButtonProps={{ type: \"ghost\" }}\r\n            okText=\"Exit\"\r\n          >\r\n            <ModalDetails details={modalResults} />\r\n          </Modal>\r\n        </Content>\r\n      </Layout>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}